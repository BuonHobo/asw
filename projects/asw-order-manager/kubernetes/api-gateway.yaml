apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  selector:
    app: api-gateway
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ordermanager
      service: api-gateway
  template:
    metadata:
      labels:
        app: ordermanager
        service: api-gateway
    spec:
      containers:
        - name: api-gateway
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 5
            failureThreshold: 3
            initialDelaySeconds: 120
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            periodSeconds: 10
          image: ghcr.io/buonhobo/asw-api-gateway
          ports:
            - containerPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: ordermanager
spec:
  ingressClassName: nginx
  rules:
    - host: ordermanager.asw.it
      http:
        paths:
          - backend:
              service:
                name: api-gateway
                port:
                  number: 8080
            pathType: Prefix
            path: /
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: service-discovery-reader
rules:
  - apiGroups: ["", "extensions", "apps"]
    resources: ["pods", "services", "endpoints"]
    verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: service-discovery-reader-binding
subjects:
  # all service accounts in any namespace
  - kind: Group
    name: system:serviceaccounts
    apiGroup: ""
roleRef:
  apiGroup: ""
  kind: ClusterRole
  name: service-discovery-reader